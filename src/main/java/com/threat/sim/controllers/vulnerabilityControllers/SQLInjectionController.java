package com.threat.sim.controllers.vulnerabilityControllers;

import com.threat.sim.models.UserSQLI;
import com.threat.sim.repositories.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;

import java.util.List;

@Controller
public class SQLInjectionController {
    @Autowired
    UserRepository userRepository;

    @GetMapping(value = "/sqli")
    public String sqlI() {
        return "sql-injection";
    }

    @PostMapping(value = "/sqli")
    public String sqlI(Model model,
                       @RequestParam("username") String username,
                       @RequestParam("password") String password) {
        if(username.isEmpty() || password.isEmpty()){
            model.addAttribute("message", "Please fill all inputs");
            return "sql-injection";
        }
        List<UserSQLI> userSQLIList = userRepository.getSQLIUsers(username, password);
        if(userSQLIList.isEmpty()){
            model.addAttribute("message", "User does not exist");
            return "sql-injection";
        }
        model.addAttribute("users", userSQLIList);
        return "sql-injection";
    }

}
