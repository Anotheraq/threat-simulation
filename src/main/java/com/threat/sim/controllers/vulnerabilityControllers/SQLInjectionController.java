package com.threat.sim.controllers.vulnerabilityControllers;

import com.threat.sim.models.User;
import org.apache.commons.lang3.exception.ExceptionUtils;
import org.junit.jupiter.api.Assertions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;

import javax.sql.DataSource;
import java.util.List;

@Controller
public class SQLInjectionController {
    private JdbcTemplate jdbcTemplate;
    @Autowired
    @Qualifier("JdbcBuilder")
    public void setJdbcTemplate(DataSource ds){
        this.jdbcTemplate = new JdbcTemplate(ds);
    }

    @GetMapping(value = "/sqli")
    public String sqlI() {
        return "sql-injection";
    }

    @PostMapping(value = "/sqli")
    public String sqlI(Model model,
                       @RequestParam("username") String username,
                       @RequestParam("password") String password) {
        if(username.isEmpty() || password.isEmpty()){
            model.addAttribute("message", "Please fill all inputs");
            return "sql-injection";
        }
        List<User> userList = getUsers(username, password);
        if(userList.isEmpty()){
            model.addAttribute("message", "User does not exist");
            return "sql-injection";
        }
        model.addAttribute("users", userList);
        return "sql-injection";
    }

    private List<User> getUsers(String username, String password){
        return jdbcTemplate.query("SELECT * FROM sqli.users WHERE username = '"+username+"' AND password = '"+password+"';",
                (rs, rowNum) -> new User(
                        rs.getString("username"),
                        rs.getString("password"),
                        rs.getString("data")
                )
        );
    }

}
